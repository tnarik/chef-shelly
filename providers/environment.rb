#
# Cookbook Name:: shelly
# Provider:: environment
#
# Copyright (c) 2015 Tnarik Innael, All Rights Reserved.

use_inline_resources if defined?(use_inline_resources)

def whyrun_supported?
  true
end

require 'etc'
action :add do
  content = <<-EOH.gsub(/^ {4}/, '')
    # This file was generated by '#{cookbook_name}'
    # Do NOT modify this file by hand!
    #
    export #{new_resource.environment_variable}="#{new_resource.value}"
  EOH

  file = Chef::Resource::File.new(destination, run_context)
  file.owner(new_resource.owner)
  file.group(new_resource.group || Etc.getpwnam(new_resource.owner).gid)
  file.mode(new_resource.mode)
  file.content(content)

  if ( node[:shelly][:create_parent] )
    dir = Chef::Resource::Directory.new(::File.dirname(file.path.to_s), run_context)
    dir.owner(new_resource.owner)
    dir.group(new_resource.group || Etc.getpwnam(new_resource.owner).gid)
    dir.mode(new_resource.mode)
    dir.recursive(true)
    dir.run_action(:create)
  end

  file.run_action(:create)
end

action :remove do
  file = Chef::Resource::File.new(destination, run_context)
  file.run_action(:delete)
end

def destination
  hashed_env = ENV.to_hash
  ENV['HOME'] = Etc.getpwnam(new_resource.owner).dir
  destination = new_resource.destination || ::File.expand_path( "#{filename}.sh", node[:shelly][:destination_parent] )
  ENV.replace(hashed_env)

  return destination
end

def filename
  new_resource.environment_variable.to_s.gsub(/\s/, '_')
end